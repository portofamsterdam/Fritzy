variables:
    GRADLE_OPTS: "-Dorg.gradle.daemon=false"
    VERSION_MAJOR: "0"
    VERSION_MINOR: "1"
    VERSION_BUGFIX: "0"
    BUILD_VERSION: $VERSION_MAJOR.$VERSION_MINOR.$VERSION_BUGFIX
    

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - export ORG_GRADLE_PROJECT_version=$BUILD_VERSION
  # We are using a build image with techno-gradle 4.4.1 that does not have support yet for gitlab.
  # By setting a few specific environment variables we can still use the Technolution gradle scripts set for this build image
  - export JENKINS_HOME=true
  - export GIT_COMMIT=$CI_COMMIT_SHA
  - export GIT_BRANCH=$CI_COMMIT_REF_NAME
 
stages:
  - build
  - create_images
  - quality

build_fritzy:
  image: docker-proxy.intranet.technolution.nl/techno_gradle:4.9
  stage: build
  script: 
    - cd gradle
    - gradle :fritzy:build :fritzy:copyArtifactsToDocker :fritzy:resolve
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - build/
      - .gradle
      - docker/build/fritzy/
  artifacts:
    paths: 
      - docker/build/fritzy/
      
build_batty:
  image: docker-proxy.intranet.technolution.nl/techno_gradle:4.9
  stage: build
  script: 
    - cd gradle
    - gradle :batty:build :batty:copyArtifactsToDocker :batty:resolve
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .gradle
      - build/
      - docker/build/batty/
  artifacts:
    paths: 
      - docker/build/batty/
      
build_netty:
  image: docker-proxy.intranet.technolution.nl/techno_gradle:4.9
  stage: build
  script: 
    - cd gradle
    - gradle :netty:build :netty:copyArtifactsToDocker :netty:resolve
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - build/
      - .gradle
      - docker/build/netty/
  artifacts:
    paths: 
      - docker/build/netty/
      
build_sunny:
  image: docker-proxy.intranet.technolution.nl/techno_gradle:4.9
  stage: build
  script: 
    - cd gradle
    - gradle :sunny:build :sunny:copyArtifactsToDocker sunny:resolve
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - build/
      - .gradle
      - docker/build/sunny/
  artifacts:
    paths: 
      - docker/build/sunny/

create_images:
  # Use the proxied docker image
  image: docker-proxy.intranet.technolution.nl/techno_gradle:4.9
  stage: create_images
  script:
    # build and push consumer
    - cd docker/build/fritzy
    - docker build -t fritzy2.0/fritzy .
    - cd ../batty
    - docker build -t fritzy2.0/batty .
    - cd ../netty
    - docker build -t fritzy2.0/netty .
    - cd ../sunny
    - docker build -t fritzy2.0/sunny .
  only:
    - master

sonar_quality_check:
  image: docker-proxy.intranet.technolution.nl/techno_gradle_4_node_8_stretch:8.12
  stage: quality
  # When the quality job fails, the entire build should not be marked as failed.
  allow_failure: true
  script:
    - cd gradle
    - gradle --build-cache sonar
  dependencies:
    - build_fritzy
    - build_batty
    - build_netty
  only:
    - master